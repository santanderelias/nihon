const devModeSwitch=document.getElementById("dev-mode-switch"),isDevMode=()=>"true"===localStorage.getItem("devMode"),isWanakanaEnabled=()=>"true"===localStorage.getItem("wanakanaEnabled");devModeSwitch&&(devModeSwitch.checked=isDevMode(),devModeSwitch.addEventListener("change",(()=>{localStorage.setItem("devMode",devModeSwitch.checked),alert("Developer mode setting changed. Please reload the page for it to take effect."),location.reload()})));const wanakanaSwitch=document.getElementById("wanakana-switch");if(wanakanaSwitch&&(wanakanaSwitch.checked=isWanakanaEnabled(),wanakanaSwitch.addEventListener("change",(()=>{localStorage.setItem("wanakanaEnabled",wanakanaSwitch.checked)}))),"serviceWorker"in navigator&&!isDevMode()){let e,t;navigator.serviceWorker.addEventListener("message",(e=>{if(e.data.version){console.log("App Version:",e.data.version);const t=document.querySelector("#settings-modal .modal-footer .text-muted");t&&(t.textContent=`Version: ${e.data.version}`);const a=document.getElementById("loading-version");a&&(a.textContent=`Version: ${e.data.version}`)}else if("show-toast"===e.data.action)showToast(e.data.title,e.data.message);else if("download-progress"===e.data.action){const{file:t,current:a,total:n}=e.data;updateLoadingProgress(Math.round(a/n*100),"Downloading assets...");const o=document.getElementById("loading-file");o&&(o.textContent=`Downloading file ${a} of ${n}: ${t}`)}})),window.addEventListener("load",(()=>{navigator.serviceWorker.register("/nihon/sw.js",{scope:"/nihon/"}).then((t=>{console.log("ServiceWorker registration successful with scope: ",t.scope),navigator.serviceWorker.controller?navigator.serviceWorker.controller.postMessage({action:"get-version"}):navigator.serviceWorker.addEventListener("controllerchange",(()=>{navigator.serviceWorker.controller&&navigator.serviceWorker.controller.postMessage({action:"get-version"})})),t.addEventListener("updatefound",(()=>{e=t.installing,e.addEventListener("statechange",(()=>{"installed"===e.state&&navigator.serviceWorker.controller&&showToast("Update Available","A new version is available.",!0)}))}))})).catch((e=>{console.log("ServiceWorker registration failed: ",e)}))})),navigator.serviceWorker.addEventListener("controllerchange",(()=>{t||(window.location.reload(),t=!0)}))}const darkModeSwitch=document.getElementById("dark-mode-switch"),htmlElement=document.documentElement,setDarkMode=e=>{htmlElement.setAttribute("data-bs-theme",e?"dark":"light"),localStorage.setItem("darkMode",e)};if(darkModeSwitch){const e=window.matchMedia("(prefers-color-scheme: dark)").matches,t=localStorage.getItem("darkMode"),a=null!==t?"true"===t:e;darkModeSwitch.checked=a,setDarkMode(a),darkModeSwitch.addEventListener("change",(()=>{setDarkMode(darkModeSwitch.checked)}))}let deferredPrompt;const installButton=document.getElementById("install-button");window.addEventListener("beforeinstallprompt",(e=>{console.log("beforeinstallprompt fired",e),e.preventDefault(),deferredPrompt=e,installButton?(installButton.style.display="block",console.log("Install button displayed. deferredPrompt set.")):console.log("Install button element not found.")})),installButton&&(console.log("Install button element found."),installButton.addEventListener("click",(async()=>{console.log("Install button clicked. Prompting..."),installButton.style.display="none",deferredPrompt.prompt();const{outcome:e}=await deferredPrompt.userChoice;console.log(`User response to the install prompt: ${e}`),showToast("Installation","accepted"===e?"App installed successfully!":"App installation cancelled."),deferredPrompt=null})));const clearDataButton=document.getElementById("clear-data-button");clearDataButton&&clearDataButton.addEventListener("click",(()=>{if(confirm("Are you sure you want to clear all your progress data? This cannot be undone.")){localStorage.removeItem("nihon-progress"),progress={},showToast("Data Cleared","All progress data has been cleared."),showHomePage();const e=bootstrap.Modal.getInstance(document.getElementById("settings-modal"));e&&e.hide()}}));const resetAppButton=document.getElementById("reset-app-button");resetAppButton&&resetAppButton.addEventListener("click",(async()=>{if(confirm("Are you sure you want to completely reset the app? This will delete all data, caches, and service workers.")){if("serviceWorker"in navigator){const e=await navigator.serviceWorker.getRegistrations();for(let t of e)await t.unregister(),console.log("Service Worker unregistered:",t.scope)}const e=await caches.keys();for(let t of e)await caches.delete(t),console.log("Cache deleted:",t);localStorage.clear(),console.log("All localStorage data cleared.");const t=indexedDB.deleteDatabase("nihonDictionary");t.onsuccess=()=>console.log("IndexedDB deleted."),t.onerror=e=>console.error("Error deleting IndexedDB:",e.target.error),showToast("App Reset","App has been completely reset. Please refresh the page."),location.reload()}}));const uninstallAppButton=document.getElementById("uninstall-app-button");uninstallAppButton?uninstallAppButton.addEventListener("click",(()=>{showToast("Uninstall App","To uninstall the app, please go to your browser's settings (e.g., Chrome: Settings > Apps > Manage apps > Nihon) or your device's app management settings and uninstall it from there.")})):console.log("Install button element not found at script load.");const checkUpdatesButton=document.getElementById("check-updates-button");let dictionaryReadyPromise,resolveDictionaryReady;function setupDictionaryPromise(){dictionaryReadyPromise=new Promise((e=>{resolveDictionaryReady=e}))}checkUpdatesButton&&checkUpdatesButton.addEventListener("click",(()=>{"serviceWorker"in navigator?navigator.serviceWorker.getRegistration().then((e=>{e?e.update().then((e=>{e?showToast("Update Found","A new version of the app is available. Please restart the app to update."):showToast("No Updates","You are on the latest version of the app.")})):showToast("Error","Service worker not registered.")})):showToast("Error","Service workers are not supported in this browser.")}));const loadingOverlay=document.getElementById("loading-overlay"),loadingProgressBar=document.getElementById("loading-progress-bar"),loadingProgressText=document.getElementById("loading-progress-text"),loadingStatus=document.getElementById("loading-status");function updateLoadingProgress(e,t){const a=Math.round(e);loadingProgressBar&&(loadingProgressBar.style.width=`${a}%`,loadingProgressBar.setAttribute("aria-valuenow",a)),loadingProgressText&&(loadingProgressText.textContent=`${a}%`),loadingStatus&&(loadingStatus.textContent=t)}let db;async function loadDictionary(e){const t=()=>new Promise((e=>requestAnimationFrame(e)));try{const a=initSqlJs({locateFile:e=>"/nihon/js/sql-wasm.wasm"});e&&e(0,"Loading SQLite library..."),await t();const n=await a,o=await fetch("/nihon/db/db_manifest.json"),i=(await o.json()).files;let r=null;for(let a=0;a<i.length;a++){const o=i[a],s=`/nihon/db/${o}`;if(e){e(Math.round(a/i.length*100),`Loading dictionary ${o}...`)}await t();const c=await fetch(s),l=await c.arrayBuffer();0===a?r=new n.Database(new Uint8Array(l)):(r.exec(`ATTACH DATABASE 'file:${o}' AS db${a+1}`),r.exec(`INSERT INTO main.entries SELECT * FROM db${a+1}.entries`),r.exec(`DETACH DATABASE db${a+1}`))}console.log("All dictionary parts loaded into SQLite."),e&&e(100,"Dictionary ready."),await t(),self.db=r}catch(e){showToast("Dictionary","An error occurred while loading the dictionary."),console.error("Failed to load dictionary:",e)}}const contentArea=document.getElementById("content-area"),homeButton=document.getElementById("home-button"),characterSets={hiragana:{"あ":"a","い":"i","う":"u","え":"e","お":"o","か":"ka","き":"ki","く":"ku","け":"ke","こ":"ko","さ":"sa","し":"shi","す":"su","せ":"se","そ":"so","た":"ta","ち":"chi","つ":"tsu","て":"te","と":"to","な":"na","に":"ni","ぬ":"nu","ね":"ne","の":"no","は":"ha","ひ":"hi","ふ":"fu","へ":"he","ほ":"ho","ま":"ma","み":"mi","む":"mu","め":"me","も":"mo","や":"ya","ゆ":"yu","よ":"yo","ら":"ra","り":"ri","る":"ru","れ":"re","ろ":"ro","わ":"wa","を":"wo","ん":"n"},dakuten:{"が":"ga","ぎ":"gi","ぐ":"gu","げ":"ge","ご":"go","ざ":"za","じ":"ji","ず":"zu","ぜ":"ze","ぞ":"zo","だ":"da","ぢ":"ji","づ":"zu","で":"de","ど":"do","ば":"ba","び":"bi","ぶ":"bu","べ":"be","ぼ":"bo"},handakuten:{"ぱ":"pa","ぴ":"pi","ぷ":"pu","ぺ":"pe","ぽ":"po"},katakana:{"ア":"a","イ":"i","ウ":"u","エ":"e","オ":"o","カ":"ka","キ":"ki","ク":"ku","ケ":"ke","コ":"ko","サ":"sa","シ":"shi","ス":"su","セ":"se","ソ":"so","タ":"ta","チ":"chi","ツ":"tsu","テ":"te","ト":"to","ナ":"na","ニ":"ni","ヌ":"nu","ネ":"ne","ノ":"no","ハ":"ha","ヒ":"hi","フ":"fu","ヘ":"he","ホ":"ho","マ":"ma","ミ":"mi","ム":"mu","メ":"me","モ":"mo","ヤ":"ya","ユ":"yu","ヨ":"yo","ラ":"ra","リ":"ri","ル":"ru","レ":"re","ロ":"ro","ワ":"wa","ヲ":"wo","ン":"n"},kanji:{"一":"ichi","二":"ni","三":"san","四":"shi","五":"go","六":"roku","七":"shichi","八":"hachi","九":"kyu","十":"juu","人":"hito","日":"hi","月":"tsuki","火":"hi","水":"mizu","木":"ki","金":"kin","土":"tsuchi","年":"toshi","時":"toki","分":"fun","今":"ima","前":"mae","後":"ato","上":"ue","下":"shita","左":"hidari","右":"migi","中":"naka","外":"soto","大":"dai","小":"shou","高":"taka","安":"yasu","新":"atara","古":"furu","長":"naga","多":"oo","少":"suku","早":"haya","学":"gaku","校":"kou","生":"sei","先":"sen","何":"nani","私":"watashi","友":"tomo","達":"dachi","本":"hon","語":"go","話":"hana","見":"mi","聞":"ki","読":"yo","書":"ka","食":"ta","飲":"no","買":"ka","行":"i","来":"ku","出":"de","入":"hai","会":"a","休":"yasu","言":"i","思":"omo","持":"mo","待":"ma","作":"tsuku","使":"tsuka","知":"shi","死":"shi","住":"su","売":"u","立":"ta","歩":"aru","走":"hashi","乗":"no","降":"o","着":"ki","渡":"wata","通":"kayo","帰":"kae","働":"hatara"},numbers:{"一":{latin:"1",romaji:"ichi"},"二":{latin:"2",romaji:"ni"},"三":{latin:"3",romaji:"san"},"四":{latin:"4",romaji:"shi"},"五":{latin:"5",romaji:"go"},"六":{latin:"6",romaji:"roku"},"七":{latin:"7",romaji:"shichi"},"八":{latin:"8",romaji:"hachi"},"九":{latin:"9",romaji:"kyuu"},"十":{latin:"10",romaji:"juu"},"十一":{latin:"11",romaji:"juuichi"},"十二":{latin:"12",romaji:"juuni"},"十三":{latin:"13",romaji:"juusan"},"十四":{latin:"14",romaji:"juushi"},"十五":{latin:"15",romaji:"juugo"},"十六":{latin:"16",romaji:"juuroku"},"十七":{latin:"17",romaji:"juushichi"},"十八":{latin:"18",romaji:"juuhachi"},"十九":{latin:"19",romaji:"juukyuu"},"二十":{latin:"20",romaji:"nijuu"},"二十一":{latin:"21",romaji:"nijuuichi"},"二十二":{latin:"22",romaji:"nijuuni"},"二十三":{latin:"23",romaji:"nijuusan"},"二十四":{latin:"24",romaji:"nijuushi"},"二十五":{latin:"25",romaji:"nijuugo"},"二十六":{latin:"26",romaji:"nijuuroku"},"二十七":{latin:"27",romaji:"nijuushichi"},"二十八":{latin:"28",romaji:"nijuuhachi"},"二十九":{latin:"29",romaji:"nijuukyuu"},"三十":{latin:"30",romaji:"sanjuu"},"三十一":{latin:"31",romaji:"sanjuuichi"},"三十二":{latin:"32",romaji:"sanjuuni"},"三十三":{latin:"33",romaji:"sanjuusan"},"三十四":{latin:"34",romaji:"sanjuushi"},"三十五":{latin:"35",romaji:"sanjuugo"},"三十六":{latin:"36",romaji:"sanjuuroku"},"三十七":{latin:"37",romaji:"sanjuushichi"},"三十八":{latin:"38",romaji:"sanjuuhachi"},"三十九":{latin:"39",romaji:"sanjuukyuu"},"四十":{latin:"40",romaji:"yonjuu"},"四十一":{latin:"41",romaji:"yonjuuichi"},"四十二":{latin:"42",romaji:"yonjuuni"},"四十三":{latin:"43",romaji:"yonjuusan"},"四十四":{latin:"44",romaji:"yonjuushi"},"四十五":{latin:"45",romaji:"yonjuugo"},"四十六":{latin:"46",romaji:"yonjuuroku"},"四十七":{latin:"47",romaji:"yonjuushichi"},"四十八":{latin:"48",romaji:"yonjuuhachi"},"四十九":{latin:"49",romaji:"yonjuukyuu"},"五十":{latin:"50",romaji:"gojuu"},"五十一":{latin:"51",romaji:"gojuuichi"},"五十二":{latin:"52",romaji:"gojuuni"},"五十三":{latin:"53",romaji:"gojuusan"},"五十四":{latin:"54",romaji:"gojuushi"},"五十五":{latin:"55",romaji:"gojuugo"},"五十六":{latin:"56",romaji:"gojuuroku"},"五十七":{latin:"57",romaji:"gojuushichi"},"五十八":{latin:"58",romaji:"gojuuhachi"},"五十九":{latin:"59",romaji:"gojuukyuu"},"六十":{latin:"60",romaji:"rokujuu"},"六十一":{latin:"61",romaji:"rokujuuichi"},"六十二":{latin:"62",romaji:"rokujuuni"},"六十三":{latin:"63",romaji:"rokujuusan"},"六十四":{latin:"64",romaji:"rokujuushi"},"六十五":{latin:"65",romaji:"rokujuugo"},"六十六":{latin:"66",romaji:"rokujuuroku"},"六十七":{latin:"67",romaji:"rokujuushichi"},"六十八":{latin:"68",romaji:"rokujuuhachi"},"六十九":{latin:"69",romaji:"rokujuukyuu"},"七十":{latin:"70",romaji:"nanajuu"},"七十一":{latin:"71",romaji:"nanajuuichi"},"七十二":{latin:"72",romaji:"nanajuuni"},"七十三":{latin:"73",romaji:"nanajuusan"},"七十四":{latin:"74",romaji:"nanajuushi"},"七十五":{latin:"75",romaji:"nanajuugo"},"七十六":{latin:"76",romaji:"nanajuuroku"},"七十七":{latin:"77",romaji:"nanajuushichi"},"七十八":{latin:"78",romaji:"nanajuuhachi"},"七十九":{latin:"79",romaji:"nanajuukyuu"},"八十":{latin:"80",romaji:"hachijuu"},"八十一":{latin:"81",romaji:"hachijuuichi"},"八十二":{latin:"82",romaji:"hachijuuni"},"八十三":{latin:"83",romaji:"hachijuusan"},"八十四":{latin:"84",romaji:"hachijuushi"},"八十五":{latin:"85",romaji:"hachijuugo"},"八十六":{latin:"86",romaji:"hachijuuroku"},"八十七":{latin:"87",romaji:"hachijuushichi"},"八十八":{latin:"88",romaji:"hachijuuhachi"},"八十九":{latin:"89",romaji:"hachijuukyuu"},"九十":{latin:"90",romaji:"kyuujuu"},"九十一":{latin:"91",romaji:"kyuujuuichi"},"九十二":{latin:"92",romaji:"kyuujuuni"},"九十三":{latin:"93",romaji:"kyuujuusan"},"九十四":{latin:"94",romaji:"kyuujuushi"},"九十五":{latin:"95",romaji:"kyuujuugo"},"九十六":{latin:"96",romaji:"kyuujuuroku"},"九十七":{latin:"97",romaji:"kyuujuushichi"},"九十八":{latin:"98",romaji:"kyuujuuhachi"},"九十九":{latin:"99",romaji:"kyuujuukyuu"},"百":{latin:"100",romaji:"hyaku"}}};let progress=JSON.parse(localStorage.getItem("nihon-progress"))||{},currentCharset={};function initializeProgress(e){let t=!1;for(const a in e)progress[a]||(progress[a]={correct:0,incorrect:0},t=!0);t&&localStorage.setItem("nihon-progress",JSON.stringify(progress))}function getNextCharacter(){let e=[];for(const t in currentCharset){const a=progress[t],n=Math.max(1,1+5*a.incorrect-a.correct);for(let a=0;a<n;a++)e.push(t)}if(0===e.length)return null;return e[Math.floor(Math.random()*e.length)]}function showHomePage(){contentArea.innerHTML='\n        <div class="card shadow-sm">\n            <div class="card-body">\n                <h5 class="card-title">Welcome to Nihon</h5>\n                <p class="card-text">Select a section to start your personalized quiz.</p>\n                <div class="d-grid gap-2">\n                    <button class="btn btn-primary" onclick="startQuiz(\'hiragana\')">Hiragana</button>\n                    <button class="btn btn-primary" onclick="startQuiz(\'dakuten\')">Dakuten</button>\n                    <button class="btn btn-primary" onclick="startQuiz(\'handakuten\')">Han-dakuten</button>\n                    <button class="btn btn-info" onclick="startQuiz(\'katakana\')">Katakana</button>\n                    <button class="btn btn-warning" onclick="startQuiz(\'kanji\')">Kanji</button>\n                    <button class="btn btn-success" onclick="startQuiz(\'numbers\')">Numbers</button>\n                </div>\n            </div>\n        </div>\n    '}function startQuiz(e){currentCharset=characterSets[e],initializeProgress(currentCharset),contentArea.innerHTML='\n        <div class="card text-center shadow-sm">\n            <div class="card-body">\n                <div id="feedback-area" class="mb-2" style="height: 24px;"></div>\n                <h1 id="char-display" class="display-1"></h1>\n                <div id="example-word-area" class="mt-3"></div>\n                <div class="mb-3">\n                    <input type="text" class="form-control text-center" id="answer-input" onkeypress="if(event.key === \'Enter\') document.getElementById(\'check-button\').click()">\n                </div>\n                <button class="btn btn-success" id="check-button">Check</button>\n                <button class="btn btn-secondary" id="skip-button">Skip</button>\n            </div>\n        </div>\n    ';const t=document.getElementById("answer-input");if(isWanakanaEnabled()){const a={customKanaMapping:{shi:"し",chi:"ち",tsu:"つ",fu:"ふ",ji:"じ",zu:"ず"}};"katakana"===e?wanakana.bind(t,{...a,to:"katakana"}):wanakana.bind(t,{...a,to:"hiragana"})}loadQuestion(e)}async function getExampleWord(e){if(await dictionaryReadyPromise,!db)return null;const t=db.prepare("SELECT * FROM entries WHERE word LIKE ? LIMIT 1");t.bind([`${e}%`]);let a=null;return t.step()&&(a=t.getAsObject()),t.free(),a}async function loadQuestion(e){const t=getNextCharacter();if(!t)return void(contentArea.innerHTML='\n            <div class="card text-center shadow-sm">\n                <div class="card-body">\n                    <h5 class="card-title">Congratulations!</h5>\n                    <p class="card-text">You have mastered this set.</p>\n                    <button class="btn btn-secondary" onclick="showHomePage()">Back to Home</button>\n                </div>\n            </div>');const a="numbers"===e?currentCharset[t].romaji:currentCharset[t];document.getElementById("char-display").textContent=t,document.getElementById("feedback-area").innerHTML="";const n=document.getElementById("answer-input");n.value="",n.readOnly=!1;const o=document.getElementById("check-button");o.disabled=!1,o.onclick=()=>checkAnswer(t,a,e);document.getElementById("skip-button").onclick=()=>loadQuestion(e),n.focus();const i=await getExampleWord(t),r=document.getElementById("example-word-area");i&&r?r.innerHTML=`\n            <p class="card-text mt-3" style="font-family: 'Noto Sans JP Embedded', sans-serif;">\n                <strong>Example:</strong> ${i.word} (${i.reading}) - <em>${i.meaning}</em>\n            </p>\n        `:r&&(r.innerHTML="")}function checkAnswer(e,t,a){let n=document.getElementById("answer-input").value.trim();const o=document.getElementById("feedback-area");isWanakanaEnabled()&&(n=wanakana.toRomaji(n)),n===t?(progress[e].correct++,o.innerHTML='<span class="text-success">Correct!</span>'):(progress[e].incorrect++,o.innerHTML=`<span class="text-danger">Incorrect. It's "${t}".</span>`),localStorage.setItem("nihon-progress",JSON.stringify(progress)),document.getElementById("check-button").disabled=!0,setTimeout((()=>loadQuestion(a)),1200)}async function main(){setupDictionaryPromise(),updateLoadingProgress(5,"Core assets loaded.");await loadDictionary(((e,t)=>{updateLoadingProgress(5+Math.round(.9*e),t)})),resolveDictionaryReady(),updateLoadingProgress(100,"Ready!"),setTimeout((()=>{loadingOverlay&&(loadingOverlay.style.display="none"),showHomePage(),updateHomeButton(!1)}),500)}function showToast(e,t,a=!1){const n=document.getElementById("liveToast"),o=document.getElementById("toast-title"),i=document.getElementById("toast-body");document.querySelector(".toast-container");if(n&&o&&i){if(o.textContent=e,i.innerHTML=t,a){const e=document.createElement("button");e.className="btn btn-primary btn-sm mt-2",e.textContent="Restart",e.onclick=()=>{newWorker&&newWorker.postMessage({action:"skipWaiting"}),window.location.reload()},i.appendChild(document.createElement("br")),i.appendChild(e)}new bootstrap.Toast(n,{autohide:!a,delay:5e3}).show()}}document.addEventListener("DOMContentLoaded",main);const statsModal=document.getElementById("stats-modal"),wrongCharsTableBody=document.getElementById("wrong-chars-table-body");statsModal&&statsModal.addEventListener("show.bs.modal",(()=>{wrongCharsTableBody.innerHTML="";const e=[];for(const t in progress)if(progress[t].incorrect>0){let a="";for(const e in characterSets)if(characterSets[e][t]){a="numbers"===e?characterSets[e][t].romaji:characterSets[e][t];break}e.push({char:t,romaji:a,count:progress[t].incorrect})}e.sort(((e,t)=>t.count-e.count)),0===e.length?wrongCharsTableBody.innerHTML='<tr><td colspan="3">No characters answered incorrectly yet!</td></tr>':e.forEach((e=>{const t=wrongCharsTableBody.insertRow(),a=t.insertCell(),n=t.insertCell(),o=t.insertCell();a.textContent=e.char,n.textContent=e.romaji,o.textContent=e.count,a.style.fontFamily="'Noto Sans JP Embedded', sans-serif",n.style.fontFamily="'Noto Sans JP Embedded', sans-serif"}))}));const dictionaryModal=document.getElementById("dictionary-modal"),dictionarySearchInput=document.getElementById("dictionary-search-input"),dictionarySearchButton=document.getElementById("dictionary-search-button"),dictionaryResultArea=document.getElementById("dictionary-result-area"),referencesModal=document.getElementById("references-modal");function populateReferencesModal(){const e=document.getElementById("hiragana"),t=document.getElementById("dakuten"),a=document.getElementById("handakuten"),n=document.getElementById("katakana"),o=document.getElementById("kanji"),i=document.getElementById("numbers");e.innerHTML=generateCharacterCards(characterSets.hiragana),t.innerHTML=generateCharacterCards(characterSets.dakuten),a.innerHTML=generateCharacterCards(characterSets.handakuten),n.innerHTML=generateCharacterCards(characterSets.katakana),o.innerHTML=generateCharacterCards(characterSets.kanji),i.innerHTML=generateCharacterCards(characterSets.numbers)}function generateCharacterCards(e){let t='<div class="row row-cols-3 row-cols-md-4 row-cols-lg-5 g-2">';for(const a in e){let n=a,o=e[a],i="";e===characterSets.numbers&&(n=a,i=e[a].latin,o=e[a].romaji),t+=`\n            <div class="col">\n                <div class="card text-center h-100">\n                    <div class="card-body d-flex flex-column justify-content-center align-items-center">\n                        <h3 class="card-title" style="font-family: 'Noto Sans JP Embedded', sans-serif;">${n}</h3>\n                        <p class="card-text">${o} (${i})</p>\n                    </div>\n                </div>\n            </div>\n        `}return t+="</div>",t}async function searchDictionary(e){if(await dictionaryReadyPromise,!db)return void(dictionaryResultArea.innerHTML="Dictionary not loaded.");dictionaryResultArea.innerHTML="Searching...";const t=`%${e.toLowerCase()}%`,a=db.prepare("\n        SELECT * FROM entries \n        WHERE word LIKE ? OR reading LIKE ? OR meaning LIKE ?\n        ORDER BY \n            CASE WHEN word = ? THEN 1\n                 WHEN word LIKE ? THEN 2\n                 ELSE 3\n            END,\n            word\n        LIMIT 100;\n    ");a.bind([t,t,t,e,`${e}%`]);const n=[];for(;a.step();)n.push(a.getAsObject());if(a.free(),n.length>0){let e='<div class="accordion" id="dictionary-accordion">';n.forEach(((t,a)=>{const n=`entry-${a}`,o=wanakana.toRomaji(t.reading);e+=`\n                <div class="accordion-item">\n                    <h2 class="accordion-header" id="heading-${n}">\n                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${n}" aria-expanded="false" aria-controls="collapse-${n}">\n                            <div class="w-100">\n                                <strong style="font-family: 'Noto Sans JP Embedded', sans-serif;">${t.word} (${t.reading})</strong>\n                                <br>\n                                <small class="text-muted">${o}</small>\n                                <div class="text-truncate">${t.meaning}</div>\n                            </div>\n                        </button>\n                    </h2>\n                    <div id="collapse-${n}" class="accordion-collapse collapse" aria-labelledby="heading-${n}" data-bs-parent="#dictionary-accordion">\n                        <div class="accordion-body">\n                            <p style="font-family: 'Noto Sans JP Embedded', sans-serif;">${t.meaning}</p>\n                        </div>\n                    </div>\n                </div>\n            `})),n.length>=100&&(e+='<p class="text-center mt-2">More than 100 results found. Please refine your search.</p>'),e+="</div>",dictionaryResultArea.innerHTML=e}else dictionaryResultArea.innerHTML="No results found."}referencesModal&&referencesModal.addEventListener("show.bs.modal",(()=>{populateReferencesModal()})),dictionarySearchButton&&dictionarySearchInput&&(dictionarySearchButton.addEventListener("click",(()=>{const e=dictionarySearchInput.value.trim();e&&searchDictionary(e)})),dictionarySearchInput.addEventListener("keypress",(e=>{"Enter"===e.key&&dictionarySearchButton.click()})));let isSectionActive=!1;function updateHomeButton(e){const t=document.getElementById("home-button");e?(t.textContent="◀️",t.classList.add("back-button"),t.style.fontSize="1.5rem",isSectionActive=!0):(t.textContent="Nihon",t.classList.remove("back-button"),t.style.fontSize="",isSectionActive=!1)}const originalStartQuiz=startQuiz;startQuiz=function(e){originalStartQuiz(e),updateHomeButton(!0)};const originalShowHomePage=showHomePage;showHomePage=function(){originalShowHomePage(),updateHomeButton(!1)},homeButton.addEventListener("click",(e=>{e.preventDefault(),isSectionActive?showHomePage():window.scrollTo({top:0,behavior:"smooth"})})),updateHomeButton(!1);
