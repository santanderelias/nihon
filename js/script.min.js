const devModeSwitch=document.getElementById("dev-mode-switch"),isDevMode=()=>"true"===localStorage.getItem("devMode"),isWanakanaEnabled=()=>"true"===localStorage.getItem("wanakanaEnabled");devModeSwitch&&(devModeSwitch.checked=isDevMode(),devModeSwitch.addEventListener("change",(()=>{localStorage.setItem("devMode",devModeSwitch.checked),alert("Developer mode setting changed. Please reload the page for it to take effect."),location.reload()})));const wanakanaSwitch=document.getElementById("wanakana-switch");if(wanakanaSwitch&&(wanakanaSwitch.checked=isWanakanaEnabled(),wanakanaSwitch.addEventListener("change",(()=>{localStorage.setItem("wanakanaEnabled",wanakanaSwitch.checked)}))),"serviceWorker"in navigator&&!isDevMode()){let e,t;window.addEventListener("load",(()=>{navigator.serviceWorker.register("/nihon/sw.js",{scope:"/nihon/"}).then((t=>{console.log("ServiceWorker registration successful with scope: ",t.scope),navigator.serviceWorker.controller&&navigator.serviceWorker.controller.postMessage({action:"get-version"}),t.addEventListener("updatefound",(()=>{e=t.installing,e.addEventListener("statechange",(()=>{"installed"===e.state&&navigator.serviceWorker.controller&&showToast("Update Available","A new version is available.",!0)}))}))})).catch((e=>{console.log("ServiceWorker registration failed: ",e)}))})),navigator.serviceWorker.addEventListener("message",(e=>{if(e.data.version){const t=document.querySelector("#settings-modal .modal-footer .text-muted");t&&(t.textContent=`Version: ${e.data.version}`)}else"show-toast"===e.data.action&&showToast(e.data.title,e.data.message)})),navigator.serviceWorker.addEventListener("controllerchange",(()=>{t||(window.location.reload(),t=!0)}))}const darkModeSwitch=document.getElementById("dark-mode-switch"),htmlElement=document.documentElement,setDarkMode=e=>{htmlElement.setAttribute("data-bs-theme",e?"dark":"light"),localStorage.setItem("darkMode",e)};if(darkModeSwitch){const e=window.matchMedia("(prefers-color-scheme: dark)").matches,t=localStorage.getItem("darkMode"),n=null!==t?"true"===t:e;darkModeSwitch.checked=n,setDarkMode(n),darkModeSwitch.addEventListener("change",(()=>{setDarkMode(darkModeSwitch.checked)}))}let deferredPrompt;const installButton=document.getElementById("install-button");window.addEventListener("beforeinstallprompt",(e=>{console.log("beforeinstallprompt fired",e),e.preventDefault(),deferredPrompt=e,installButton?(installButton.style.display="block",console.log("Install button displayed. deferredPrompt set.")):console.log("Install button element not found.")})),installButton&&(console.log("Install button element found."),installButton.addEventListener("click",(async()=>{console.log("Install button clicked. Prompting..."),installButton.style.display="none",deferredPrompt.prompt();const{outcome:e}=await deferredPrompt.userChoice;console.log(`User response to the install prompt: ${e}`),showToast("Installation","accepted"===e?"App installed successfully!":"App installation cancelled."),deferredPrompt=null})));const clearDataButton=document.getElementById("clear-data-button");clearDataButton&&clearDataButton.addEventListener("click",(()=>{if(confirm("Are you sure you want to clear all your progress data? This cannot be undone.")){localStorage.removeItem("nihon-progress"),progress={},showToast("Data Cleared","All progress data has been cleared."),showHomePage();const e=bootstrap.Modal.getInstance(document.getElementById("settings-modal"));e&&e.hide()}}));const resetAppButton=document.getElementById("reset-app-button");resetAppButton&&resetAppButton.addEventListener("click",(async()=>{if(confirm("Are you sure you want to completely reset the app? This will delete all data, caches, and service workers.")){if("serviceWorker"in navigator){const e=await navigator.serviceWorker.getRegistrations();for(let t of e)await t.unregister(),console.log("Service Worker unregistered:",t.scope)}const e=await caches.keys();for(let t of e)await caches.delete(t),console.log("Cache deleted:",t);localStorage.clear(),console.log("All localStorage data cleared.");const t=indexedDB.deleteDatabase("nihonDictionary");t.onsuccess=()=>console.log("IndexedDB deleted."),t.onerror=e=>console.error("Error deleting IndexedDB:",e.target.error),showToast("App Reset","App has been completely reset. Please refresh the page."),location.reload()}}));const uninstallAppButton=document.getElementById("uninstall-app-button");uninstallAppButton?uninstallAppButton.addEventListener("click",(()=>{showToast("Uninstall App","To uninstall the app, please go to your browser's settings (e.g., Chrome: Settings > Apps > Manage apps > Nihon) or your device's app management settings and uninstall it from there.")})):console.log("Install button element not found at script load.");const checkUpdatesButton=document.getElementById("check-updates-button");checkUpdatesButton&&checkUpdatesButton.addEventListener("click",(()=>{"serviceWorker"in navigator?navigator.serviceWorker.getRegistration().then((e=>{e?e.update().then((e=>{e?showToast("Update Found","A new version of the app is available. Please restart the app to update."):showToast("No Updates","You are on the latest version of the app.")})):showToast("Error","Service worker not registered.")})):showToast("Error","Service workers are not supported in this browser.")}));let dictionaryLoadPromise=null;const DB_NAME="nihonDictionary",DB_VERSION=1,STORE_NAME="entries";let db;function openDatabase(){return new Promise(((e,t)=>{const n=indexedDB.open(DB_NAME,DB_VERSION);n.onupgradeneeded=e=>{if(db=e.target.result,!db.objectStoreNames.contains(STORE_NAME)){const e=db.createObjectStore(STORE_NAME,{keyPath:"seq"});e.createIndex("word","word",{unique:!1}),e.createIndex("reading","reading",{unique:!1}),e.createIndex("meaning","meaning",{unique:!1})}},n.onsuccess=t=>{db=t.target.result,e(db)},n.onerror=e=>{console.error("IndexedDB error:",e.target.error),t(e.target.error)}}))}async function getDictFileCount(){let e=0,t=!0;for(;t;){const n=e+1;try{(await fetch(`js/dict/dict-${n}.js`,{method:"HEAD"})).ok?e++:t=!1}catch(e){t=!1}}return e}async function loadDictionary(){try{db=await openDatabase();const transaction=db.transaction(STORE_NAME,"readonly"),objectStore=transaction.objectStore(STORE_NAME),countRequest=objectStore.count();return new Promise((async(resolve,reject)=>{countRequest.onsuccess=async()=>{if(countRequest.result>0)return console.log("Dictionary already loaded in IndexedDB."),void resolve();console.log("Populating IndexedDB with dictionary data...");const totalLibraries=await getDictFileCount();if(console.log(`Found ${totalLibraries} dictionary files.`),0===totalLibraries)return console.log("No dictionary files found."),showToast("Dictionary","No dictionary files found."),void resolve();const parser=new DOMParser;for(let i=1;i<=totalLibraries;i++){const response=await fetch(`js/dict/dict-${i}.js`);if(!response.ok){console.warn(`Failed to fetch dict-${i}.js. Status: ${response.status}. Skipping.`);continue}const scriptContent=await response.text(),DICT=eval(scriptContent.replace("const DICT =",""));if(void 0!==DICT&&Array.isArray(DICT)){const e=db.transaction(STORE_NAME,"readwrite"),t=e.objectStore(STORE_NAME);DICT.forEach((e=>{try{const n=parser.parseFromString(e,"text/xml").getElementsByTagName("entry")[0];if(!n)return;const a=n.getElementsByTagName("ent_seq")[0]?.textContent;if(!a)return;const o=n.getElementsByTagName("keb")[0],r=n.getElementsByTagName("reb")[0],s=o?.textContent||r?.textContent,i=r?.textContent,c=n.getElementsByTagName("sense")[0],u=c?.getElementsByTagName("gloss")[0],d=u?.textContent;s&&i&&d&&t.add({seq:a,word:s,reading:i,meaning:d})}catch(e){console.error("Failed to parse dictionary entry:",e)}})),await new Promise((t=>e.oncomplete=t))}}console.log("Dictionary loaded successfully into IndexedDB."),resolve()},countRequest.onerror=e=>{console.error("IndexedDB count error:",e.target.error),reject(e.target.error)}}))}catch(e){showToast("Dictionary","An error occurred while loading dictionary."),console.error("Failed to load dictionary:",e)}}dictionaryLoadPromise=loadDictionary();const contentArea=document.getElementById("content-area"),homeButton=document.getElementById("home-button"),characterSets={hiragana:{"あ":"a","い":"i","う":"u","え":"e","お":"o","か":"ka","き":"ki","く":"ku","け":"ke","こ":"ko","さ":"sa","し":"shi","す":"su","せ":"se","そ":"so","た":"ta","ち":"chi","つ":"tsu","て":"te","と":"to","な":"na","に":"ni","ぬ":"nu","ね":"ne","の":"no","は":"ha","ひ":"hi","ふ":"fu","へ":"he","ほ":"ho","ま":"ma","み":"mi","む":"mu","め":"me","も":"mo","や":"ya","ゆ":"yu","よ":"yo","ら":"ra","り":"ri","る":"ru","れ":"re","ろ":"ro","わ":"wa","を":"wo","ん":"n"},dakuten:{"が":"ga","ぎ":"gi","ぐ":"gu","げ":"ge","ご":"go","ざ":"za","じ":"ji","ず":"zu","ぜ":"ze","ぞ":"zo","だ":"da","ぢ":"ji","づ":"zu","で":"de","ど":"do","ば":"ba","び":"bi","ぶ":"bu","べ":"be","ぼ":"bo"},handakuten:{"ぱ":"pa","ぴ":"pi","ぷ":"pu","ぺ":"pe","ぽ":"po"},katakana:{"ア":"a","イ":"i","ウ":"u","エ":"e","オ":"o","カ":"ka","キ":"ki","ク":"ku","ケ":"ke","コ":"ko","サ":"sa","シ":"shi","ス":"su","セ":"se","ソ":"so","タ":"ta","チ":"chi","ツ":"tsu","テ":"te","ト":"to","ナ":"na","ニ":"ni","ヌ":"nu","ネ":"ne","ノ":"no","ハ":"ha","ヒ":"hi","フ":"fu","ヘ":"he","ホ":"ho","マ":"ma","ミ":"mi","ム":"mu","メ":"me","モ":"mo","ヤ":"ya","ユ":"yu","ヨ":"yo","ラ":"ra","リ":"ri","ル":"ru","レ":"re","ロ":"ro","ワ":"wa","ヲ":"wo","ン":"n"},kanji:{"一":"ichi","二":"ni","三":"san","四":"shi","五":"go","六":"roku","七":"shichi","八":"hachi","九":"kyu","十":"juu","人":"hito","日":"hi","月":"tsuki","火":"hi","水":"mizu","木":"ki","金":"kin","土":"tsuchi","年":"toshi","時":"toki","分":"fun","今":"ima","前":"mae","後":"ato","上":"ue","下":"shita","左":"hidari","右":"migi","中":"naka","外":"soto","大":"dai","小":"shou","高":"taka","安":"yasu","新":"atara","古":"furu","長":"naga","多":"oo","少":"suku","早":"haya","学":"gaku","校":"kou","生":"sei","先":"sen","何":"nani","私":"watashi","友":"tomo","達":"dachi","本":"hon","語":"go","話":"hana","見":"mi","聞":"ki","読":"yo","書":"ka","食":"ta","飲":"no","買":"ka","行":"i","来":"ku","出":"de","入":"hai","会":"a","休":"yasu","言":"i","思":"omo","持":"mo","待":"ma","作":"tsuku","使":"tsuka","知":"shi","死":"shi","住":"su","売":"u","立":"ta","歩":"aru","走":"hashi","乗":"no","降":"o","着":"ki","渡":"wata","通":"kayo","帰":"kae","働":"hatara"},numbers:{1:"ichi",2:"ni",3:"san",4:"yon",5:"go",6:"roku",7:"nana",8:"hachi",9:"kyuu",10:"juu",11:"juuichi",12:"juuni",13:"juusan",14:"juuyon",15:"juugo",16:"juuroku",17:"juunana",18:"juuhachi",19:"juukyuu",20:"nijuu",21:"nijuuichi",22:"nijuuni",23:"nijuusan",24:"nijuuyon",25:"nijuugo",26:"nijuuroku",27:"nijuunana",28:"nijuuhachi",29:"nijuukyuu",30:"sanjuu",31:"sanjuuichi",32:"sanjuuni",33:"sanjuusan",34:"sanjuuyon",35:"sanjuugo",36:"sanjuuroku",37:"sanjuunana",38:"sanjuuhachi",39:"sanjuukyuu",40:"yonjuu",41:"yonjuuichi",42:"yonjuuni",43:"yonjuusan",44:"yonjuuyon",45:"yonjuugo",46:"yonjuuroku",47:"yonjuunana",48:"yonjuuhachi",49:"yonjuukyuu",50:"gojuu",51:"gojuuichi",52:"gojuuni",53:"gojuusan",54:"gojuuyon",55:"gojuugo",56:"gojuuroku",57:"gojuunana",58:"gojuuhachi",59:"gojuukyuu",60:"rokujuu",61:"rokujuuichi",62:"rokujuuni",63:"rokujuusan",64:"rokujuuyon",65:"rokujuugo",66:"rokujuuroku",67:"rokujuunana",68:"rokujuuhachi",69:"rokujuukyuu",70:"nanajuu",71:"nanajuuichi",72:"nanajuuni",73:"nanajuusan",74:"nanajuuyon",75:"nanajuugo",76:"nanajuuroku",77:"nanajuunana",78:"nanajuuhachi",79:"nanajuukyuu",80:"hachijuu",81:"hachijuuichi",82:"hachijuuni",83:"hachijuusan",84:"hachijuuyon",85:"hachijuugo",86:"hachijuuroku",87:"hachijuunana",88:"hachijuuhachi",89:"hachijuukyuu",90:"kyuujuu",91:"kyuujuuichi",92:"kyuujuuni",93:"kyuujuusan",94:"kyuujuuyon",95:"kyuujuugo",96:"kyuujuuroku",97:"kyuujuunana",98:"kyuujuuhachi",99:"kyuujuukyuu",100:"hyaku"}};let progress=JSON.parse(localStorage.getItem("nihon-progress"))||{},currentCharset={};function initializeProgress(e){let t=!1;for(const n in e)progress[n]||(progress[n]={correct:0,incorrect:0},t=!0);t&&localStorage.setItem("nihon-progress",JSON.stringify(progress))}function getNextCharacter(){let e=[];for(const t in currentCharset){const n=progress[t],a=Math.max(1,1+5*n.incorrect-n.correct);for(let n=0;n<a;n++)e.push(t)}if(0===e.length)return null;return e[Math.floor(Math.random()*e.length)]}function showHomePage(){contentArea.innerHTML='\n        <div class="card shadow-sm">\n            <div class="card-body">\n                <h5 class="card-title">Welcome to Nihon</h5>\n                <p class="card-text">Select a section to start your personalized quiz.</p>\n                <div class="d-grid gap-2">\n                    <button class="btn btn-primary" onclick="startQuiz(\'hiragana\')">Hiragana</button>\n                    <button class="btn btn-primary" onclick="startQuiz(\'dakuten\')">Dakuten</button>\n                    <button class="btn btn-primary" onclick="startQuiz(\'handakuten\')">Han-dakuten</button>\n                    <button class="btn btn-info" onclick="startQuiz(\'katakana\')">Katakana</button>\n                    <button class="btn btn-warning" onclick="startQuiz(\'kanji\')">Kanji</button>\n                    <button class="btn btn-success" onclick="startQuiz(\'numbers\')">Numbers</button>\n                </div>\n            </div>\n        </div>\n    '}function startQuiz(e){currentCharset=characterSets[e],initializeProgress(currentCharset),contentArea.innerHTML='\n        <div class="card text-center shadow-sm">\n            <div class="card-body">\n                <div id="feedback-area" class="mb-2" style="height: 24px;"></div>\n                <h1 id="char-display" class="display-1"></h1>\n                <div id="example-word-area" class="mt-3"></div>\n                <div class="mb-3">\n                    <input type="text" class="form-control text-center" id="answer-input" onkeypress="if(event.key === \'Enter\') document.getElementById(\'check-button\').click()">\n                </div>\n                <button class="btn btn-success" id="check-button">Check</button>\n                <button class="btn btn-secondary" id="skip-button">Skip</button>\n            </div>\n        </div>\n    ';const t=document.getElementById("answer-input");if(isWanakanaEnabled()){const n={customKanaMapping:{shi:"し",chi:"ち",tsu:"つ",fu:"ふ",ji:"じ",zu:"ず"}};"katakana"===e?wanakana.bind(t,{...n,to:"katakana"}):wanakana.bind(t,{...n,to:"hiragana"})}loadQuestion(e)}async function getExampleWord(e){await dictionaryLoadPromise;const t=db.transaction(STORE_NAME,"readonly").objectStore(STORE_NAME).index("word").openCursor(IDBKeyRange.bound(e,e+"￿",!1,!0));return new Promise((e=>{t.onsuccess=t=>{const n=t.target.result;e(n?n.value:null)},t.onerror=()=>e(null)}))}async function loadQuestion(e){const t=getNextCharacter();if(!t)return void(contentArea.innerHTML='\n            <div class="card text-center shadow-sm">\n                <div class="card-body">\n                    <h5 class="card-title">Congratulations!</h5>\n                    <p class="card-text">You have mastered this set.</p>\n                    <button class="btn btn-secondary" onclick="showHomePage()">Back to Home</button>\n                </div>\n            </div>');const n=currentCharset[t];document.getElementById("char-display").textContent=t,document.getElementById("feedback-area").innerHTML="";const a=document.getElementById("answer-input");a.value="",a.readOnly=!1;const o=document.getElementById("check-button");o.disabled=!1,o.onclick=()=>checkAnswer(t,n,e);document.getElementById("skip-button").onclick=()=>loadQuestion(e),a.focus();const r=await getExampleWord(t),s=document.getElementById("example-word-area");r&&s?s.innerHTML=`\n            <p class="card-text mt-3" style="font-family: 'Noto Sans JP Embedded', sans-serif;">\n                <strong>Example:</strong> ${r.word} (${r.reading}) - <em>${r.meaning}</em>\n            </p>\n        `:s&&(s.innerHTML="")}function checkAnswer(e,t,n){let a=document.getElementById("answer-input").value.trim();const o=document.getElementById("feedback-area");isWanakanaEnabled()&&(a=wanakana.toRomaji(a)),a===t?(progress[e].correct++,o.innerHTML='<span class="text-success">Correct!</span>'):(progress[e].incorrect++,o.innerHTML=`<span class="text-danger">Incorrect. It's "${t}".</span>`),localStorage.setItem("nihon-progress",JSON.stringify(progress)),document.getElementById("check-button").disabled=!0,setTimeout((()=>loadQuestion(n)),1200)}function showToast(e,t,n=!1){const a=document.getElementById("liveToast"),o=document.getElementById("toast-title"),r=document.getElementById("toast-body");document.querySelector(".toast-container");if(a&&o&&r){if(o.textContent=e,r.innerHTML=t,n){const e=document.createElement("button");e.className="btn btn-primary btn-sm mt-2",e.textContent="Restart",e.onclick=()=>{newWorker.postMessage({action:"skipWaiting"})},r.appendChild(document.createElement("br")),r.appendChild(e)}new bootstrap.Toast(a,{autohide:!n,delay:5e3}).show()}}showHomePage();const statsModal=document.getElementById("stats-modal"),wrongCharsTableBody=document.getElementById("wrong-chars-table-body");statsModal&&statsModal.addEventListener("show.bs.modal",(()=>{wrongCharsTableBody.innerHTML="";const e=[];for(const t in progress)if(progress[t].incorrect>0){let n="";for(const e in characterSets)if(characterSets[e][t]){n=characterSets[e][t];break}e.push({char:t,romaji:n,count:progress[t].incorrect})}e.sort(((e,t)=>t.count-e.count)),0===e.length?wrongCharsTableBody.innerHTML='<tr><td colspan="3">No characters answered incorrectly yet!</td></tr>':e.forEach((e=>{const t=wrongCharsTableBody.insertRow(),n=t.insertCell(),a=t.insertCell(),o=t.insertCell();n.textContent=e.char,a.textContent=e.romaji,o.textContent=e.count,n.style.fontFamily="'Noto Sans JP Embedded', sans-serif",a.style.fontFamily="'Noto Sans JP Embedded', sans-serif"}))}));const dictionaryModal=document.getElementById("dictionary-modal"),dictionarySearchInput=document.getElementById("dictionary-search-input"),dictionarySearchButton=document.getElementById("dictionary-search-button"),dictionaryResultArea=document.getElementById("dictionary-result-area"),referencesModal=document.getElementById("references-modal");function populateReferencesModal(){const e=document.getElementById("hiragana"),t=document.getElementById("dakuten"),n=document.getElementById("handakuten"),a=document.getElementById("katakana"),o=document.getElementById("kanji"),r=document.getElementById("numbers");e.innerHTML=generateCharacterCards(characterSets.hiragana),t.innerHTML=generateCharacterCards(characterSets.dakuten),n.innerHTML=generateCharacterCards(characterSets.handakuten),a.innerHTML=generateCharacterCards(characterSets.katakana),o.innerHTML=generateCharacterCards(characterSets.kanji),r.innerHTML=generateCharacterCards(characterSets.numbers)}function generateCharacterCards(e){let t='<div class="row row-cols-3 row-cols-md-4 row-cols-lg-5 g-2">';for(const n in e)t+=`\n            <div class="col">\n                <div class="card text-center h-100">\n                    <div class="card-body d-flex flex-column justify-content-center align-items-center">\n                        <h3 class="card-title" style="font-family: 'Noto Sans JP Embedded', sans-serif;">${n}</h3>\n                        <p class="card-text">${e[n]}</p>\n                    </div>\n                </div>\n            </div>\n        `;return t+="</div>",t}async function searchDictionary(e){await dictionaryLoadPromise,dictionaryResultArea.innerHTML="Searching...";const t=e.toLowerCase(),n=db.transaction(STORE_NAME,"readonly").objectStore(STORE_NAME),a=[],o=[];o.push(new Promise((e=>{const o=n.index("word").openCursor();o.onsuccess=n=>{const o=n.target.result;o?(o.value.word.toLowerCase().includes(t)&&a.push(o.value),o.continue()):e()},o.onerror=()=>e()}))),o.push(new Promise((e=>{const o=n.index("reading").openCursor();o.onsuccess=n=>{const o=n.target.result;o?(o.value.reading.toLowerCase().includes(t)&&a.push(o.value),o.continue()):e()},o.onerror=()=>e()}))),o.push(new Promise((e=>{const o=n.index("meaning").openCursor();o.onsuccess=n=>{const o=n.target.result;o?(o.value.meaning.toLowerCase().includes(t)&&a.push(o.value),o.continue()):e()},o.onerror=()=>e()}))),await Promise.all(o);const r=Array.from(new Map(a.map((e=>[e.seq,e]))).values());if(r.sort(((e,n)=>{const a=e.word.toLowerCase(),o=n.word.toLowerCase(),r=e.reading.toLowerCase(),s=n.reading.toLowerCase(),i=e.meaning.toLowerCase(),c=n.meaning.toLowerCase(),u=t.toLowerCase();return a===u||r===u?-1:o===u||s===u?1:a.startsWith(u)||r.startsWith(u)?-1:o.startsWith(u)||s.startsWith(u)?1:a.includes(u)||r.includes(u)||i.includes(u)?-1:o.includes(u)||s.includes(u)||c.includes(u)?1:0})),r.length>0){let e='<div class="accordion" id="dictionary-accordion">';r.slice(0,100).forEach(((t,n)=>{const a=`entry-${n}`,o=wanakana.toRomaji(t.reading);e+=`\n                <div class="accordion-item">\n                    <h2 class="accordion-header" id="heading-${a}">\n                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${a}" aria-expanded="false" aria-controls="collapse-${a}">\n                            <div class="w-100">\n                                <strong style="font-family: 'Noto Sans JP Embedded', sans-serif;">${t.word} (${t.reading})</strong>\n                                <br>\n                                <small class="text-muted">${o}</small>\n                                <div class="text-truncate">${t.meaning}</div>\n                            </div>\n                        </button>\n                    </h2>\n                    <div id="collapse-${a}" class="accordion-collapse collapse" aria-labelledby="heading-${a}" data-bs-parent="#dictionary-accordion">\n                        <div class="accordion-body">\n                            <p style="font-family: 'Noto Sans JP Embedded', sans-serif;">${t.meaning}</p>\n                        </div>\n                    </div>\n                </div>\n            `})),r.length>100&&(e+='<p class="text-center mt-2">More than 100 results found. Please refine your search.</p>'),e+="</div>",dictionaryResultArea.innerHTML=e}else dictionaryResultArea.innerHTML="No results found."}referencesModal&&referencesModal.addEventListener("show.bs.modal",(()=>{populateReferencesModal()})),dictionarySearchButton&&dictionarySearchInput&&(dictionarySearchButton.addEventListener("click",(()=>{const e=dictionarySearchInput.value.trim();e&&searchDictionary(e)})),dictionarySearchInput.addEventListener("keypress",(e=>{"Enter"===e.key&&dictionarySearchButton.click()})));let isSectionActive=!1;function updateHomeButton(e){const t=document.getElementById("home-button");e?(t.textContent="◀️",t.classList.add("back-button"),t.style.fontSize="1.5rem",isSectionActive=!0):(t.textContent="Nihon",t.classList.remove("back-button"),t.style.fontSize="",isSectionActive=!1)}const originalStartQuiz=startQuiz;startQuiz=function(e){originalStartQuiz(e),updateHomeButton(!0)};const originalShowHomePage=showHomePage;showHomePage=function(){originalShowHomePage(),updateHomeButton(!1)},homeButton.addEventListener("click",(e=>{e.preventDefault(),isSectionActive?showHomePage():window.scrollTo({top:0,behavior:"smooth"})})),updateHomeButton(!1);
